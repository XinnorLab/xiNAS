- name: Query filesystem type on {{ item.data_device }}
  ansible.builtin.command: blkid -s TYPE -o value {{ item.data_device }}
  register: blkid_type
  failed_when: false
  changed_when: false

- name: Query filesystem label on {{ item.data_device }}
  ansible.builtin.command: blkid -s LABEL -o value {{ item.data_device }}
  register: blkid_label
  failed_when: false
  changed_when: false

- name: Make filesystem {{ item.label }} on {{ item.data_device }}
  ansible.builtin.command: >-
    mkfs.xfs -f -L {{ item.label }} -d su={{ item.su_kb }}k,sw={{ item.sw }}
    -l logdev={{ item.log_device }},size={{ item.log_size }}
    -s size={{ item.sector_size }} {{ item.data_device }}
  when: blkid_type.stdout != 'xfs' or blkid_label.stdout != item.label
  tags: [raid_fs, fs, mkfs]

- name: Create mountpoint {{ item.mountpoint }}
  ansible.builtin.file:
    path: "{{ item.mountpoint }}"
    state: directory
    mode: '0755'
  tags: [raid_fs, fs]

- name: Compute mount options for {{ item.label }}
  ansible.builtin.set_fact:
    mount_device: >-
      {{ item.data_device | regex_replace('^/','') | replace('/', '-') }}.device
    mount_opts_with_wanted: >-
      {{ item.mount_opts | default('') }}{{ ',' if item.mount_opts else '' }}
      x-systemd.wanted-by={{ mount_device }}
  tags: [raid_fs, fs]

- name: Mount filesystem {{ item.label }} (and add to fstab)
  ansible.builtin.mount:
    path: "{{ item.mountpoint }}"
    src: "LABEL={{ item.label }}"
    fstype: xfs
    opts: "{{ mount_opts_with_wanted }}"
    state: mounted
  tags: [raid_fs, fs]
